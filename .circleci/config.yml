# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:  
  lint-dockerfile:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            #- v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            #- v1-dependencies-
            [Dockerfile-lint]

      - run:
          name: install dependencies
          command: |
            python3 -m venv capstone
            . capstone/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./capstone
          key: 
            #v1-dependencies-{{ checksum "requirements.txt" }}
            Dockerfile-lint

      # run lint!
      - run:
          name: run lint
          command: |
            . capstone/bin/activate
            make lint 

  build_dockerimage:
    docker:
        - image: circleci/golang:1.15
          auth:
              username: $DOCKER_USER
              password: $DOCKER_PASS
    
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13

      # Build Docker Image
      - run:
            name: Build Docker Image
            command: |
              TAG=capstone-project
              docker build -t $TAG .

      # List Docker Image
      - run:
            name: List Docker Image
            command: |
              docker image ls

      # Push Docker Image
      - run:
            name: Push Docker image into Docker Hub
            command: |
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
              TAG=capstone-project
              dockerpath=aitha/$TAG
              docker tag $TAG $dockerpath
              docker push $dockerpath

  build_aws_kubernetes_cluster:
    docker:
      - image: ubuntu:18.04
    working_directory: ~/repo

    steps:
      - checkout
      
      # Update AWS Kubernetes Cluster using yaml for rolling deployment
      - run:
          name: Update AWS Kubernetes Cluster
          command: |
            export TERM=xterm
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region $AWS_DEFAULT_REGION           
            aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name udacity-devops-capstone-project
            dep_output=$(kubectl get deployments)
            echo "Deployment status...."
            echo "$dep_output"
            sleep 5
            pods_output=$(kubectl get pods)
            echo "Pods runnins status...."
            echo "$pods_output"
            sleep 5
            ports_output=$(kubectl port-forward udacity-devops-capstone-project 8000:80)
            echo "Port forwarding status...."
            echo "$ports_output"
  
workflows:
  default:
    jobs:
      - lint-dockerfile
      - build_dockerimage:
          requires: [lint-dockerfile]
      - build_aws_kubernetes_cluster:
          requires: [build_dockerimage]


      


    
